{
  "src/lib/components/DashInteractiveGraphviz.react.js": {
    "description": "An interactive graphviz renderer.\n\nRenders the dot language in the browser. It allows for panning and zooming\nand node selection. Changes in the dot_source will be animated.\n\nGraphviz is run in the browser via viz.js, so it can be computationally\nintensive.",
    "displayName": "DashInteractiveGraphviz",
    "methods": [
      {
        "name": "setGraph",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "fitGraph",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "onNodeClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onEdgeClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "edge",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "selected": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "[Pending Deprecation] The ID of the selected node.\nPlease use selected_node (or selected_edge for edges)"
      },
      "selected_node": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of the selected node."
      },
      "selected_edge": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of the selected edge."
      },
      "dot_source": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The dot language source of the graph"
      },
      "engine": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Styling to be applied to the graph container. You may want to change\nyour graphviz background to transparent.",
        "defaultValue": {
          "value": "'dot'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Changes the layout engine, see https://github.com/magjac/d3-graphviz#graphviz_engine\nfor more information",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "fit_button_style": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The style of the fit button.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "fit_button_content": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The text content of the fit button, by default it is an small square unicode character.",
        "defaultValue": {
          "value": "'\\u25A3'",
          "computed": false
        }
      },
      "persistence": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Used to allow user interactions in this component to be persisted when\nthe component - or the page - is refreshed. If `persisted` is truthy and\nhasn't changed from its previous value, a `value` that the user has\nchanged while using the app will keep that change, as long as\nthe new `value` also matches what was given originally.\nUsed in conjunction with `persistence_type`."
      },
      "persisted_props": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "enum",
            "value": [
              {
                "value": "'selected'",
                "computed": false
              },
              {
                "value": "'selected_node'",
                "computed": false
              },
              {
                "value": "'selected_edge'",
                "computed": false
              },
              {
                "value": "'dot_source'",
                "computed": false
              },
              {
                "value": "'engine'",
                "computed": false
              }
            ]
          }
        },
        "required": false,
        "description": "Properties whose user interactions will persist after refreshing the\ncomponent or the page. Since only `value` is allowed this prop can\nnormally be ignored.",
        "defaultValue": {
          "value": "['selected', 'selected_node', 'selected_edge', 'dot_source', 'engine']",
          "computed": false
        }
      },
      "persistence_type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'local'",
              "computed": false
            },
            {
              "value": "'session'",
              "computed": false
            },
            {
              "value": "'memory'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Where persisted user changes will be stored:\nmemory: only kept in memory, reset on page refresh.\nlocal: window.localStorage, data is kept after the browser quit.\nsession: window.sessionStorage, data is cleared once the browser quit.",
        "defaultValue": {
          "value": "'local'",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}